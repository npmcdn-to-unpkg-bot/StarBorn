{% extends 'base.html.twig' %}
{% block title %}Spielkarte{% endblock %} 
{% block css %}
{{ parent() }}
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.0-rc.1/dist/leaflet.css" />
<link rel="stylesheet" href="https://domoritz.github.io/leaflet-locatecontrol/dist/L.Control.Locate.min.css" />
{% endblock %}
{% block content %}
        <!--Mask-->
    <div class="container">
        <div class="row">
            <div class="col-md-12">
            <div id="map" style="height:700px; width:100%;"></div>
            </div>
        </div>
    </div>
    


    <!--/.Mask-->
{% endblock content %}
{% block javascript %}
{{ parent() }}
<script src="https://unpkg.com/leaflet@1.0.0-rc.1/dist/leaflet.js"></script>
<script src="https://domoritz.github.io/leaflet-locatecontrol/dist/L.Control.Locate.min.js" charset="utf-8"></script>
<script>

var uLat, uLng;

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(uPosition, showError);
        } else { 
           alert("Geolocation is not supported by this browser.");
        }
    }
    
    function uPosition(position) {
    
        uLat = position.coords.latitude;
        uLng = position.coords.longitude;
        populateField();
        
    }

    function showError(error) {
        switch(error.code) {
            case error.PERMISSION_DENIED:
                x.innerHTML = "User denied the request for Geolocation."
                break;
            case error.POSITION_UNAVAILABLE:
                x.innerHTML = "Location information is unavailable."
                break;
            case error.TIMEOUT:
                x.innerHTML = "The request to get user location timed out."
                break;
            case error.UNKNOWN_ERROR:
                x.innerHTML = "An unknown error occurred."
                break;
        }
    }
    
    var map = L.map('map').setView([46.7,8], 8);

    var Stamen_Watercolor = L.tileLayer('http://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.{ext}', {
        attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
        subdomains: 'abcd',
        minZoom: 15,
        maxZoom: 18,
        ext: 'png'
    }).addTo(map);
        

    
    getLocation();

    function populateField(){
        L.circle([uLat,uLng],400,{fillOpacity:0, color:"#00ff00"}).addTo(map);
        var url = "{{ path('radar', {'lat': 'lat', 'lng':'lng', 'a':user.getUid()|urlencrypt }) }}";
        url = url.replace("lat",uLat);
        url = url.replace("lng",uLng);
        console.log(url);
       
       var svg = map.getPanes().overlayPane.firstChild,
        svgFilter = document.createElementNS('http://www.w3.org/2000/svg', 'filter'),
        svgBlur = document.createElementNS('http://www.w3.org/2000/svg', 'feGaussianBlur');
        svgFilter.setAttribute('id', 'blur');
        svgFilter.setAttribute('x', '0');
        svgFilter.setAttribute('y', '0');
        svgBlur.setAttribute('stdDeviation', 3);

        svgFilter.appendChild(svgBlur);
        svg.appendChild(svgFilter);

        
        $.getJSON(url,  function( json ) {
        
            L.geoJson(json, {
                onEachFeature: function (feature, layer) {
                    var tile;
                    var popup = {title:'', contentTitle:'', contentText:''};
                    var tLat = feature.geometry.coordinates[1];
                    var tLng = feature.geometry.coordinates[0];
                    var tblx = feature.properties.blx;
                    var tbly = feature.properties.bly;
                    var ttrx = feature.properties.trx;
                    var ttry = feature.properties.try;
                    
                    if(feature.properties.tid == 127){
                        polygon = L.polygon([[feature.properties.bly, feature.properties.blx],[feature.properties.bry, feature.properties.brx],[feature.properties.try, feature.properties.trx],[feature.properties.tly, feature.properties.tlx]],{fillOpacity: 0.7, color: "#FF8800 ",fillColor: "#FF8800 ", weight: 1}).addTo(map);
                        popup.title = 'Eroberetes Gebiet';
                        popup.contentTitle = 'Dieses Gebiet angreifen!';     
                        
                        polygon._path.setAttribute('filter', 'url(#blur)');                        
                    }else if(feature.properties.tid == 128){
                        polygon = L.polygon([[feature.properties.bly, feature.properties.blx],[feature.properties.bry, feature.properties.brx],[feature.properties.try, feature.properties.trx],[feature.properties.tly, feature.properties.tlx]],{fillOpacity: 0.7, color: "#0099CC ",fillColor: "#0099CC ", weight: 1}).addTo(map);
                        popup.title = 'Eroberetes Gebiet';
                        popup.contentTitle = 'Dieses Gebiet angreifen!';     
                        
                        polygon._path.setAttribute('filter', 'url(#blur)');                        
                    }else{
                        polygon = L.polygon([[feature.properties.bly, feature.properties.blx],[feature.properties.bry, feature.properties.brx],[feature.properties.try, feature.properties.trx],[feature.properties.tly, feature.properties.tlx]],{fillOpacity: 0.5, color: "#9e9e9e   ", fillColor: "#9e9e9e ", weight: 1}).addTo(map);
                        popup.title = 'Uneroberetes Gebiet';
                        popup.contentTitle = 'Dieses Gebiet einnehmen!';
                        popup.contentText = 'Dieses Gebiet wurde noch nie eingenommen und gibt Zusatzpunkte!';
                        
                        polygon._path.setAttribute('filter', 'url(#blur)');
                    }                    
                    
                    popupOptions = {maxWidth: 200};
                    if(uLat > tbly  && uLat < ttry && uLng > tblx  && uLng < ttrx){                    
                       
                        polygon.bindPopup( '<div style="width:240px">'+ 
                                        '   <div class="card text-xs-center">' +
                                        '       <h6 class="card-header primary-color white-text">'+popup.title+'</h6> ' +
                                        '       <div class="card-block"> ' +
                                        '           <h4 class="card-title">'+popup.contentTitle+'</h4>' +
                                        '           <p class="card-text">'+popup.contentText+'</p> '+
                                        '           <div class="row"><div class="col-xs-6"> '+
                                        '               <form method="post" action="{{ path('tile')}}"> '+
                                        '                   <input type="hidden" name="ulat" value="'+uLat+'"> '+
                                        '                   <input type="hidden" name="ulng" value="'+uLng+'"> '+
                                        '                   <input type="hidden" name="tlat" value="'+tLat+'"> '+
                                        '                   <input type="hidden" name="tlng" value="'+tLng+'"> '+
                                        '                   <input type="hidden" name="tblx" value="'+tblx+'"> '+
                                        '                   <input type="hidden" name="tbly" value="'+tbly+'"> '+
                                        '                   <input type="hidden" name="ttrx" value="'+ttrx+'"> '+
                                        '                   <input type="hidden" name="ttry" value="'+ttry+'"> '+
                                        '                   <input type="hidden" name="a" value="{{ user.getUid()|urlencrypt }}"> '+                                        
                                        '                   <button class="btn btn-primary-outline waves-effect" type="submit"><i class="fa fa-3x fa-info-circle" aria-hidden="true"></i></button> '+
                                        '               </form> '+
                                        '           </div> '+
                                        '           <div class="col-xs-6"> '+
                                        '               <form method="post" action="{{ path('capture')}}"> '+
                                        '                   <input type="hidden" name="ulat" value="'+uLat+'"> '+
                                        '                   <input type="hidden" name="ulng" value="'+uLng+'"> '+
                                        '                   <input type="hidden" name="tlat" value="'+tLat+'"> '+
                                        '                   <input type="hidden" name="tlng" value="'+tLng+'"> '+
                                        '                   <input type="hidden" name="tblx" value="'+tblx+'"> '+
                                        '                   <input type="hidden" name="tbly" value="'+tbly+'"> '+
                                        '                   <input type="hidden" name="ttrx" value="'+ttrx+'"> '+
                                        '                   <input type="hidden" name="ttry" value="'+ttry+'"> '+
                                        '                   <input type="hidden" name="a" value="{{ user.getUid()|urlencrypt }}"> '+                                        
                                        '                   <button class="btn btn-danger-outline waves-effect" type="submit"><i class="fa fa-3x fa-crosshairs" aria-hidden="true"></i></button> '+
                                        '               </form> '+
                                        '           </div></div> '+
                                        '       </div> '+
                                        '   </div>'+
                                        '</div>'
                        );
                        
                    }else{
                        popup.contentText = 'Bewege dich zum ausgewählten Gebiet um es einzunehmen!';
                        
                        polygon.bindPopup( '<div style="width:200px">'+ 
                                        '   <div class="card text-xs-center">' +
                                        '       <h6 class="card-header primary-color white-text">'+popup.title+'</h6> ' +
                                        '       <div class="card-block"> ' +
                                        '           <h4 class="card-title">'+popup.contentTitle+'</h4>' +
                                        '           <p class="card-text">'+popup.contentText+'</p> '+
                                        '           <div class="row"><div class="col-xs-12"> '+
                                        '               <form method="post" action="{{ path('tile')}}"> '+
                                        '                   <input type="hidden" name="ulat" value="'+uLat+'"> '+
                                        '                   <input type="hidden" name="ulng" value="'+uLng+'"> '+
                                        '                   <input type="hidden" name="tlat" value="'+tLat+'"> '+
                                        '                   <input type="hidden" name="tlng" value="'+tLng+'"> '+
                                        '                   <input type="hidden" name="tblx" value="'+tblx+'"> '+
                                        '                   <input type="hidden" name="tbly" value="'+tbly+'"> '+
                                        '                   <input type="hidden" name="ttrx" value="'+ttrx+'"> '+
                                        '                   <input type="hidden" name="ttry" value="'+ttry+'"> '+
                                        '                   <input type="hidden" name="a" value="{{ user.getUid()|urlencrypt }}"> '+                                        
                                        '                   <button class="btn btn-primary-outline waves-effect" type="submit"><i class="fa fa-3x fa-info-circle" aria-hidden="true"></i></button> '+
                                        '               </form> '+
                                        '           </div></div> '+
                                        '       </div> '+
                                        '   </div>'+
                                        '</div>'
                        );
                    }
                    
                    L.circleMarker([feature.geometry.coordinates[1],feature.geometry.coordinates[0]],20,{color:"#545454"}).addTo(map);
                }
                
            });  
            
        });

    }
    
    var lc = L.control.locate({setView:'always',markerStyle:{radius:'15',fillColor:'#ff0000'},circleStyle:{fillColor:'#ff0000'}}).addTo(map);
    
    lc.start();
    
    
</script>
{% endblock %}

